# services:
#   db:
#     image: postgres:latest
#     container_name: pgres_db
#     ports:
#       - "5432:5432"
#     environment:
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#       POSTGRES_DB: ${POSTGRES_DB}
#     env_file: .env
#     volumes:
#       - pgres_db_data:/var/lib/postgresql/data
#     networks:
#       - test-net
#     restart: always
  
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: tutorial_app
#     ports:
#       - "4000:4000"
#     networks:
#       - test-net
#     depends_on:
#       - db
#     environment:
#       DATABASE_URL:  ecto://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgres_db:5432/${POSTGRES_DB}
#     restart: always
  
# volumes:
#   pgres_db_data:

# networks:
#   test-net: {}



services:
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: tutorial_app
    ports:
      - "4000:4000"
    volumes:
      - .:/app
      - deps:/app/deps
      - _build:/app/_build
      - node_modules:/app/assets/node_modules
    environment:
      DATABASE_URL: ecto://${POSTGRES_USER}:${POSTGRES_PASSWORD}@pgres_db:5432/${POSTGRES_DB}
    depends_on:
      - db
    networks:
      - test-net
    restart: always
  db:
    image: postgres:latest
    container_name: pgres_db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file: .env
    volumes:
      - pgres_db_data:/var/lib/postgresql/data
    networks:
      - test-net
    restart: always

volumes:
  pgres_db_data:
  deps:
  _build:
  node_modules:

networks:
  test-net: {}
